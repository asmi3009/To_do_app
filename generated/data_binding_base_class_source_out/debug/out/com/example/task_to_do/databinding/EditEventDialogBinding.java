// Generated by view binder compiler. Do not edit!
package com.example.task_to_do.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.task_to_do.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EditEventDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText eventDateEditText;

  @NonNull
  public final EditText eventDescriptionEditText;

  @NonNull
  public final EditText eventNameEditText;

  @NonNull
  public final EditText eventTimeEditText;

  private EditEventDialogBinding(@NonNull LinearLayout rootView,
      @NonNull EditText eventDateEditText, @NonNull EditText eventDescriptionEditText,
      @NonNull EditText eventNameEditText, @NonNull EditText eventTimeEditText) {
    this.rootView = rootView;
    this.eventDateEditText = eventDateEditText;
    this.eventDescriptionEditText = eventDescriptionEditText;
    this.eventNameEditText = eventNameEditText;
    this.eventTimeEditText = eventTimeEditText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EditEventDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditEventDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.edit_event_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditEventDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.event_date_edit_text;
      EditText eventDateEditText = ViewBindings.findChildViewById(rootView, id);
      if (eventDateEditText == null) {
        break missingId;
      }

      id = R.id.event_description_edit_text;
      EditText eventDescriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (eventDescriptionEditText == null) {
        break missingId;
      }

      id = R.id.event_name_edit_text;
      EditText eventNameEditText = ViewBindings.findChildViewById(rootView, id);
      if (eventNameEditText == null) {
        break missingId;
      }

      id = R.id.event_time_edit_text;
      EditText eventTimeEditText = ViewBindings.findChildViewById(rootView, id);
      if (eventTimeEditText == null) {
        break missingId;
      }

      return new EditEventDialogBinding((LinearLayout) rootView, eventDateEditText,
          eventDescriptionEditText, eventNameEditText, eventTimeEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
